# Kalen Evans
# 2/2021
# Magic: The Gathering Cards Class
import random
DEKCLIST = []
class Card(object):
    def __init__(self,cmc,type,power,toughness):
        self.cmc = 0
        self.type = ""
		self.power = 0
		self.toughness = 0

class Hand(object):
    def __init__(self):
        self.cards = []
    def __str__(self):
        if self.cards:
            rep = ""
            for card in self.cards:
                rep += str(card)
        else:
            rep = "<EMPTY>"
        return rep
    def clear(self):
        self.cards = []
    def add(self,card):
        self.cards.append(card)
    def give(self,card,otherHand):
        self.cards.remove(card)
        otherHand.add(card)

class Deck(Hand):
    def shuffle(self):
        import random
        random.shuffle(self.cards)
    def populate(self):
        for crd in DECKLIST:
            self.add(crd)
    def draw(self,amount):
        for cd in range(amount):
            if self.cards:
                topCard = self.cards[0]
                self.add(topCard)
            else:
                print("Deck is out of cards: You Win")
                self.lose()

class Pos_Card(Card):
    def __init__(self,rank,suit):
        super(Pos_Card, self).__init__(rank,suit)
        self.faceup = True

    def flip(self):
        self.faceup = not self.faceup

    def __str__(self):
        if self.faceup:
            rep = super(Pos_Card,self).__str__()
        else:
            rep = """
            +-----------+
            |###########|
            |###########|
            |###########|
            |###########|
            |###########|
            |###########|
            +-----------+
            """
        return rep

if __name__ == "__main__":
    print("You ran this module directly (and did not 'import' it).")
    input("\n\nPress the enter key to exit.")
