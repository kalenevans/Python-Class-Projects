# Kalen Evans
# 2/2021
# Magic: The Gathering Cards Class
import random
DEKCLIST = []
class Card(object):
    def __init__(self,cmc,type,power,toughness,location):
    self.cmc = 0
    self.type = ""
	self.power = 0
	self.toughness = 0
	self.location = "deck"

class Hand(object):
    def __init__(self):
        self.cards = []
    def clear(self):
        self.cards = []
    def add(self,card):
        self.cards.append(card)
    def give(self,card,otherHand):
        self.cards.remove(card)
        otherHand.add(card)
	def play(self,card):
		card.location = "stack"
	def resolve(self,card):
		card.location = "graveyard"

class Deck(Hand):
    def shuffle(self):
        import random
        random.shuffle(self.cards)
    def populate(self):
        for crd in DECKLIST:
            self.add(crd)
    def draw(self,amount):
        for cd in range(amount):
            if self.cards:
                topCard = self.cards[0]
                self.add(topCard)
				topCard.location = "hand"
            else:
                print("Deck is out of cards: You Win")
                self.lose()


if __name__ == "__main__":
    print("You ran this module directly (and did not 'import' it).")
    input("\n\nPress the enter key to exit.")
